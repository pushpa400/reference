1. make a directory : test
2. 






-------
1. make a folder : test
   mkdir test  /   cd test
2. make repo :   
   git init 
3. make some file :
   notepad test.txt
4. send it to staging from untracked:
   git add test.txt  or git add .
5. make it tracked
   git commit -m "initial commit"

6. make a repo in github  and check its git url :  .......abc.git
7. from local repo, give command
   git remote add origin .......abc.git
   git push origin master
==================================   Git Merge -------------------
make a repository in github with readme as : Test2

https://github.com/dibakar123/Test2.git

Make changes in Readme file and commit it.

Now open a command window & clone this repository as :
git clone https://github.com/dibakar123/Test2.git

go to this repo folder 
cd Test1
git status

Make a branch: mybranch where we need to make some changes.
git branch -a
git branch mybranch
git branch -a

Now checkout this branch as:
git checkout mybranch
cat README.md

make change on file :
nano README.md ( after edit it save it using ^x+y )

In this new branch , make some update in readme file and then staged , as well as commit
notepad Readme.md

git status
git add Readme.md
git status
git commit -m "update readme.md in branch-mybranch"

now push this new branch to github repository as:
git push origin mybranch

  now task to merge : mybranch ---->  master 


Now check from github, there are 2 branch: master (with old form) and mybranch(with new form)

Now click on "pull request" => "new pull request" => choose base:master <-- compare:mybranch  
=> "create pull request"  => merge pull request => confirm merge
At end show message as --> Pull request successfully merged and closed

======================================  Merge conflict


Make a repository in github : test3
update on readme.md and commit.

goto local pc , make a clone of this repo
make some change in README.md and then commit in local repo
To see merge conflict in file, search the file for the conflict marker <<<<<<<. 
When open the file in text editor, see the changes from the HEAD or base branch after the line <<<<<<< HEAD. 
Next, see =======, which divides changes from the changes in the other branch, followed by >>>>>>> BRANCH-NAME.

Decide if want to keep only branch's changes, keep only the other branch's changes, or make a brand new change, which may incorporate changes from both branches. 
Delete the conflict markers <<<<<<<, =======, >>>>>>> and make the changes in the final merge. 

Now add to staging and commit as well as push to github(if required).
git add .
git commit -m "update readme.md"
git push

















