
JSTL (JSP Standard Tag Library)
***************************************************
The JSP Standard Tag Library (JSTL) represents a set of tags to simplify the JSP development.

Advantage of JSTL
  A.   Fast Development JSTL provides many tags that simplify the JSP.
  B.   Code Reusability We can use the JSTL tags on various pages.
  C.   No need to use scriptlet tag It avoids the use of scriptlet tag.

Download the jstl1.2.jar file

Add JSTL Dependency in pom.xml:

 <!-- https://mvnrepository.com/artifact/jstl/jstl -->
<dependency>
    <groupId>jstl</groupId>
    <artifactId>jstl</artifactId>
    <version>1.2</version>
</dependency>


JSTL Dependency:
1.  servlet : 2.5
2.  jstl : 1.2


JSTL Core Tags
-------------------------------------
The JSTL core tag provides variable support, URL management, flow control etc. 

The syntax used for including JSTL core library in your JSP is:

    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  




a.  JSTL Core <c:out> Tag
****************************************
The <c:out> tag is similar to JSP expression tag, but it can only be used with expression. 
It will display the result of an expression, similar to the way < %=...% > work.

    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  

    <html>  
    <body>  
     <c:out value="Welcome to JEE World"/>  
     <c:out value="${a}"/>  
     </body>  
    </html>  

b.JSTL Core <c:set> Tag
****************************************
It is used to set the result of an expression evaluated in a 'scope'. 
The <c:set> tag is helpful because it evaluates the expression and use the result to set a value of java.util.Map or JavaBean.

<c:set var="Income" scope="session" value="${4000*4}"/>  

<c:out value="${Income}"/> 


JSTL Control :
----------------------------------

c.JSTL Core <c:if> Tag
****************************************

The < c:if > tag is used for testing the condition and it display the body content, if the expression evaluated is true.


<c:set var="income" scope="session" value="${4000*4}"/>  

<c:if test="${income > 8000}">  
   <p>My income is: <c:out value="${income}"/><p>  
</c:if>  


d. JSTL Core <c:choose>, <c:when>, <c:otherwise> Tag
********************************************************************************
<c:set var="income" scope="session" value="${4000*4}"/>  

<p>Your income is : <c:out value="${income}"/></p>  

<c:choose>  
    <c:when test="${income < 1000}">  
       Income is not good.  
    </c:when>  
    <c:when test="${income > 10000}">  
        Income is very good.  
    </c:when>  
    <c:otherwise>  
       Income is 1000...  
    </c:otherwise>  
</c:choose>  


c.JSTL Core <c:forEach> Tag
****************************************
The <c:for each > is an iteration tag used for repeating the nested body content 
for fixed number of times or over the collection.


<c:forEach var="j" begin="1" end="3">  
   Item <c:out value="${j}"/><p>  
</c:forEach>  




d.JSTL Core <c:forTokens> Tag
****************************************
The < c:forTokens > tag iterates over tokens which is separated by the supplied delimeters. 
It is used for break a string into tokens and iterate through each of the tokens to generate output.


<hr>
<c:forTokens items="Rahul-Nakul-Rajesh" delims="-" var="name">  
   <c:out value="${name}"/><p>  
</c:forTokens>  



e.JSTL Core <c:redirect> Tag
****************************************
The < c:redirect > tag redirects the browser to a new URL. 
It supports the context-relative URLs, and the < c:param > tag.

It is used for redirecting the browser to an alternate URL by using automatic URL rewriting.


<hr>
 <c:set var="url" value="0" scope="request"/>  
  <c:if test="${url<1}">  
     <c:redirect url="http://javatpoint.com"/>  
  </c:if>  
  <c:if test="${url>1}">  
     <c:redirect url="http://facebook.com"/>  
  </c:if>  


JSTL Formatting tags
--------------------------------------
The formatting tags provide support for message formatting, number and date formatting etc. 
The url for the formatting tags is http://java.sun.com/jsp/jstl/fmt and prefix is fmt.

The JSTL formatting tags are used for internationalized web sites to display and format text, the time, the date and numbers.

The syntax used for including JSTL formatting library in your JSP is:

    <%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"  %>  

Date & Time Format
****************************************

<hr>
<c:set var="Date" value="<%=new java.util.Date()%>" />  
<p>  
Formatted Time :  
<fmt:formatDate type="time" value="${Date}" />  
</p>  
<p>  
Formatted Date :  
<fmt:formatDate type="date" value="${Date}" />  
</p>  
<p>  
Formatted Date and Time :  
<fmt:formatDate type="both" value="${Date}" />  
</p>  
<p>  
Formatted Date and Time in short style :  
<fmt:formatDate type="both" dateStyle="short" timeStyle="short"  
value="${Date}" />  
</p>  
<p>  
Formatted Date and Time in medium style :  
<fmt:formatDate type="both" dateStyle="medium" timeStyle="medium"  
value="${Date}" />  
</p>  
<p>  
Formatted Date and Time in long style :  
<fmt:formatDate type="both" dateStyle="long" timeStyle="long"  
value="${Date}" />  
</p>  


Numeric Format
****************************************
<c:set var="Amount" value="9850.14115" />  
<p> Formatted Number-1:  
<fmt:formatNumber value="${Amount}"  /></p>   
<fmt:formatNumber type="number" groupingUsed="true" value="${Amount}" /></p>    



JSTL SQL Tags

The JSTL sql tags provide SQL support. The url for the sql tags is http://java.sun.com/jsp/jstl/sql and prefix is sql.

 The syntax used for including JSTL SQL tags library in your JSP is:

    <%@ taglib uri="http://java.sun.com/jsp/jstl/sql" prefix="sql" %> 


To make datasource: 

<sql:setDataSource var="db" driver="com.mysql.jdbc.Driver"  
     url="jdbc:mysql://localhost:3306/lms"  
     user="root"  password=""/>  



To execute query:

<sql:query dataSource="${db}" var="rs">  
SELECT * from lms_members;  
</sql:query> 

To get data from recordset :

<table border="2" width="100%">  
<tr>  
<th>Member ID</th>  
<th>Member Name</th>  
<th>City</th>  
<th>Registration Date</th>  
</tr>  

<c:forEach var="row" items="${rs.rows}">  
<tr>  
<td><c:out value="${row.member_id}"/></td>  
<td><c:out value="${row.member_name}"/></td>  
<td><c:out value="${row.city}"/></td>  
<td><c:out value="${row.date_register}"/></td>  
</tr>  
</c:forEach>  
</table>  



JSTL SQL <sql:update> Tag

The <sql:update> tag is used for executing the SQL DML query defined in its sql attribute or in the tag body. It may be SQL UPDATE, INSERT or DELETE statements.

Example:

    <sql:update dataSource="${db}" var="count">  
    INSERT INTO Students VALUES (154,'Nasreen', 'jaha', 25);  
    </sql:update>  






